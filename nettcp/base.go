package nettcp

/*
 * 模块内部常量, 接口等定义文件.
 */

/************************************************************************/
// 常量, 变量, 结构体, 接口定义.
/************************************************************************/

/*
 * 消息结构信息说明[消息描述信息占用8字节]
 * ---------------------------------
 * |2字节   |1字节|1字节|4字节|N字节  |
 * ---------------------------------
 * |消息长度|加密 |压缩 |消息ID|消息内容|
 * ---------------------------------
 * 注: 消息长度不包含消息头的8字节长度.
 * 消息长度字段类型: uint16
 * 消息加密字段类型: byte
 * 消息压缩字段类型: byte
 * 消息ID字段类型:  uint32 (暂定, 可以缩短为uint16)
 */

// type MsgLenType uint16
// type MsgIDType uint32
// type ActorIDType uint64

// 消息结构相关常量.
const (
	// MsgLenMax         int = 4096 // 单条消息长度限制.(暂不做硬性限制, 逻辑层控制.)
	MsgHeadLen        int = 8 // 消息头长度.
	MsgLenIndexE      int = 2 // 消息长度信息在消息头[]byte中的索引结束位置.起始位置固定为0
	MsgCryptFlagIndex int = 2 // 消息加密标识在消息头[]byte中的索引.
	MsgZipFlagIndex   int = 3 // 消息压缩标识在消息头[]byte中的索引.
	MsgMsgIDIndexS    int = 4 // 消息ID在消息头[]byte中的索引起始位置.
	MsgMsgIDIndexE    int = 8 // 消息ID在消息头[]byte中的索引结束位置.
)

// 加密, 压缩标识.
const (
	MsgCryptFlag byte = 1 // 消息加密标识符.
	MsgZipFlag   byte = 1 // 消息压缩标识符.
)

// BufReadMax 单次接收消息长度.
const BufReadMax int = 1024

// HeartBeatTimeTick 心跳检测频率.(单位:秒)
const HeartBeatTimeTick int64 = 300

/************************************************************************/
// moudule functions.
/************************************************************************/

/************************************************************************/
// unit tests.
/************************************************************************/
